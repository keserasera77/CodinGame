--道順の記録(Goneクラスの設計)--
fieldB gone;
相手が確実に通った道

vector<pair<int, int>> posFromSilence;
Silence以降の経路（スタート位置からの相対的な位置を保存）

int preSilenceTurn;
前のSilenceのターン

vector<int> mineTurn;
MINEをしたターンを全て保持。

set<pair<int, int>> startPosFromSilence;
スタート地点としてあり得る座標を持つ。(最初は空)

--戦略--
自分の潜水艦の状態(State)を持つ
Early : turn < EARLY_TURN
Danger : (myLife <= 2 || preMyLife - myLife > 0) && near(6)
Safe : それ以外

(Early)序盤はMINEをまき散らす
(Safe)SONARを使いながら適当に動く。
(Danger)相手から逃げる。SILENCEを積極的に使う。

回復
(Early) MINE ->TORPEDO -> SILENCE -> SONAR
(Safe)TORPEDO -> SONAR -> SILENCE -> MINE
(Danger)TORPEDO -> SILENCE -> SONAR -> MINE

--行動--
SONAR
相手の存在可
能範囲が大きい && 序盤じゃない

MOVE
ある点を中心点とし、近くをうろうろ
Dangerなら相手から逃げる。
行き先が十分広い場所を選ぶ。ない場合はその中で一番広い場所を選ぶ。

TORPEDO
攻撃が相手の存在可能範囲に届く && その連結成分が全てTORPEDOの爆撃に含まれている

SILENCE
相手と近い
Danger || TORPEDOを撃った || 自分の存在可能範囲が小さい
その中で自分のライフが減ったとき || TORPEDOを撃った時は遠くへ逃げる。

MINE
置けるときに置く

TRIGGER
攻撃が相手の存在可能範囲に届く && その連結成分が全てTRIGGERの爆撃に含まれている

--改善案--

o 魚雷を打って4マス逃げる

敵に寄ってMINE->TRIGGER

相手に見つかったら自分の地雷畑に逃げる。
↑自分がすでに通った場所なのでできないことが多そう。

o 地雷を爆破した場所によってから相手のgoneを生成
SILENCEより前も考慮したい

--位置の特定--
基本的に命令一つ一つに対して相手の存在可能範囲を更新するシステム。

直近のSILENCE以降のMOVEからSILENCEの移動範囲を制限
累積和を取ってoppPosOrderSum[now] - oppPosOrderSum[j-1] == {0,0}
となればjターン目の位置と被ることになるのでその方向には移動できない。

TRIGGERでは相手がMINEをしたターンの(MINEの数)*4(TRIGGERの周囲4)マスを実際に相対位置と照らし合わせて可能な経路のみを残す。

--気がかり--
SILNECE前の相手の移動と現在の相手の移動を掛け合わせて相手の位置を推測したい！！
評価関数とか使うほうが便利そう。
